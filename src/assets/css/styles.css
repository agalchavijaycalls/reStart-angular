/*
 * reStart Boilerplate / reStart Angular
 * Author: Kim Maida 
 * Author URI: <http://kim-maida.com>
 * Source: <https://github.com/kmaida/reStart-angular>
 * License: GNU Public License
*/
/*-- Vendors --*/
html,
body {
  font-size: 100%;
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

body {
  padding: 0;
  margin: 0;
  font-family: "Helvetica Neue", Helvetica, Roboto, Arial, sans-serif;
  font-weight: normal;
  line-height: 1.5;
  color: #0a0a0a;
  background: #fefefe;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

img {
  max-width: 100%;
  height: auto;
  -ms-interpolation-mode: bicubic;
  display: inline-block;
  vertical-align: middle; }

textarea {
  height: auto;
  min-height: 50px;
  border-radius: 0; }

select {
  width: 100%;
  border-radius: 0; }

#map_canvas img,
#map_canvas embed,
#map_canvas object,
.map_canvas img,
.map_canvas embed,
.map_canvas object,
.mqa-display img,
.mqa-display embed,
.mqa-display object {
  max-width: none !important; }

button {
  -webkit-appearance: none;
  -moz-appearance: none;
  background: transparent;
  padding: 0;
  border: 0;
  border-radius: 0;
  line-height: 1; }

.row {
  max-width: 75rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  margin-left: auto;
  margin-right: auto; }
  .row .row,
  .column-row .row {
    margin-left: -0.625rem;
    margin-right: -0.625rem; }

.column,
.columns {
  -webkit-box-flex: 1;
  -webkit-flex: 1 1 0px;
  -ms-flex: 1 1 0px;
  flex: 1 1 0px;
  padding-left: 0.625rem;
  padding-right: 0.625rem; }

.small-1 {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 8.33333%;
  -ms-flex: 0 0 8.33333%;
  flex: 0 0 8.33333%;
  max-width: 8.33333%; }

.small-2 {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 16.66667%;
  -ms-flex: 0 0 16.66667%;
  flex: 0 0 16.66667%;
  max-width: 16.66667%; }

.small-3 {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 25%;
  -ms-flex: 0 0 25%;
  flex: 0 0 25%;
  max-width: 25%; }

.small-4 {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 33.33333%;
  -ms-flex: 0 0 33.33333%;
  flex: 0 0 33.33333%;
  max-width: 33.33333%; }

.small-5 {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 41.66667%;
  -ms-flex: 0 0 41.66667%;
  flex: 0 0 41.66667%;
  max-width: 41.66667%; }

.small-6 {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 50%;
  -ms-flex: 0 0 50%;
  flex: 0 0 50%;
  max-width: 50%; }

.small-7 {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 58.33333%;
  -ms-flex: 0 0 58.33333%;
  flex: 0 0 58.33333%;
  max-width: 58.33333%; }

.small-8 {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 66.66667%;
  -ms-flex: 0 0 66.66667%;
  flex: 0 0 66.66667%;
  max-width: 66.66667%; }

.small-9 {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 75%;
  -ms-flex: 0 0 75%;
  flex: 0 0 75%;
  max-width: 75%; }

.small-10 {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 83.33333%;
  -ms-flex: 0 0 83.33333%;
  flex: 0 0 83.33333%;
  max-width: 83.33333%; }

.small-11 {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 91.66667%;
  -ms-flex: 0 0 91.66667%;
  flex: 0 0 91.66667%;
  max-width: 91.66667%; }

.small-12 {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 100%;
  -ms-flex: 0 0 100%;
  flex: 0 0 100%;
  max-width: 100%; }

@media screen and (min-width: 48em) {
  .medium-1 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 8.33333%;
    -ms-flex: 0 0 8.33333%;
    flex: 0 0 8.33333%;
    max-width: 8.33333%; }
  .medium-2 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 16.66667%;
    -ms-flex: 0 0 16.66667%;
    flex: 0 0 16.66667%;
    max-width: 16.66667%; }
  .medium-3 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 25%;
    -ms-flex: 0 0 25%;
    flex: 0 0 25%;
    max-width: 25%; }
  .medium-4 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 33.33333%;
    -ms-flex: 0 0 33.33333%;
    flex: 0 0 33.33333%;
    max-width: 33.33333%; }
  .medium-5 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 41.66667%;
    -ms-flex: 0 0 41.66667%;
    flex: 0 0 41.66667%;
    max-width: 41.66667%; }
  .medium-6 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 50%;
    -ms-flex: 0 0 50%;
    flex: 0 0 50%;
    max-width: 50%; }
  .medium-7 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 58.33333%;
    -ms-flex: 0 0 58.33333%;
    flex: 0 0 58.33333%;
    max-width: 58.33333%; }
  .medium-8 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 66.66667%;
    -ms-flex: 0 0 66.66667%;
    flex: 0 0 66.66667%;
    max-width: 66.66667%; }
  .medium-9 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 75%;
    -ms-flex: 0 0 75%;
    flex: 0 0 75%;
    max-width: 75%; }
  .medium-10 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 83.33333%;
    -ms-flex: 0 0 83.33333%;
    flex: 0 0 83.33333%;
    max-width: 83.33333%; }
  .medium-11 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 91.66667%;
    -ms-flex: 0 0 91.66667%;
    flex: 0 0 91.66667%;
    max-width: 91.66667%; }
  .medium-12 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 100%;
    -ms-flex: 0 0 100%;
    flex: 0 0 100%;
    max-width: 100%; } }

@media screen and (min-width: 75em) {
  .large-1 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 8.33333%;
    -ms-flex: 0 0 8.33333%;
    flex: 0 0 8.33333%;
    max-width: 8.33333%; }
  .large-2 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 16.66667%;
    -ms-flex: 0 0 16.66667%;
    flex: 0 0 16.66667%;
    max-width: 16.66667%; }
  .large-3 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 25%;
    -ms-flex: 0 0 25%;
    flex: 0 0 25%;
    max-width: 25%; }
  .large-4 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 33.33333%;
    -ms-flex: 0 0 33.33333%;
    flex: 0 0 33.33333%;
    max-width: 33.33333%; }
  .large-5 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 41.66667%;
    -ms-flex: 0 0 41.66667%;
    flex: 0 0 41.66667%;
    max-width: 41.66667%; }
  .large-6 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 50%;
    -ms-flex: 0 0 50%;
    flex: 0 0 50%;
    max-width: 50%; }
  .large-7 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 58.33333%;
    -ms-flex: 0 0 58.33333%;
    flex: 0 0 58.33333%;
    max-width: 58.33333%; }
  .large-8 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 66.66667%;
    -ms-flex: 0 0 66.66667%;
    flex: 0 0 66.66667%;
    max-width: 66.66667%; }
  .large-9 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 75%;
    -ms-flex: 0 0 75%;
    flex: 0 0 75%;
    max-width: 75%; }
  .large-10 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 83.33333%;
    -ms-flex: 0 0 83.33333%;
    flex: 0 0 83.33333%;
    max-width: 83.33333%; }
  .large-11 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 91.66667%;
    -ms-flex: 0 0 91.66667%;
    flex: 0 0 91.66667%;
    max-width: 91.66667%; }
  .large-12 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 100%;
    -ms-flex: 0 0 100%;
    flex: 0 0 100%;
    max-width: 100%; } }

@media screen and (min-width: 48em) {
  .medium-expand {
    -webkit-box-flex: 1;
    -webkit-flex: 1 1 0px;
    -ms-flex: 1 1 0px;
    flex: 1 1 0px; } }

@media screen and (min-width: 75em) {
  .large-expand {
    -webkit-box-flex: 1;
    -webkit-flex: 1 1 0px;
    -ms-flex: 1 1 0px;
    flex: 1 1 0px; } }

.shrink {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto; }

.row.medium-unstack .column {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 100%;
  -ms-flex: 0 0 100%;
  flex: 0 0 100%; }
  @media screen and (min-width: 48em) {
    .row.medium-unstack .column {
      -webkit-box-flex: 1;
      -webkit-flex: 1 1 0px;
      -ms-flex: 1 1 0px;
      flex: 1 1 0px; } }

.row.large-unstack .column {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 100%;
  -ms-flex: 0 0 100%;
  flex: 0 0 100%; }
  @media screen and (min-width: 75em) {
    .row.large-unstack .column {
      -webkit-box-flex: 1;
      -webkit-flex: 1 1 0px;
      -ms-flex: 1 1 0px;
      flex: 1 1 0px; } }

.small-order-1 {
  -webkit-box-ordinal-group: 2;
  -webkit-order: 1;
  -ms-flex-order: 1;
  order: 1; }

.small-order-2 {
  -webkit-box-ordinal-group: 3;
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2; }

.small-order-3 {
  -webkit-box-ordinal-group: 4;
  -webkit-order: 3;
  -ms-flex-order: 3;
  order: 3; }

.small-order-4 {
  -webkit-box-ordinal-group: 5;
  -webkit-order: 4;
  -ms-flex-order: 4;
  order: 4; }

.small-order-5 {
  -webkit-box-ordinal-group: 6;
  -webkit-order: 5;
  -ms-flex-order: 5;
  order: 5; }

.small-order-6 {
  -webkit-box-ordinal-group: 7;
  -webkit-order: 6;
  -ms-flex-order: 6;
  order: 6; }

@media screen and (min-width: 48em) {
  .medium-order-1 {
    -webkit-box-ordinal-group: 2;
    -webkit-order: 1;
    -ms-flex-order: 1;
    order: 1; }
  .medium-order-2 {
    -webkit-box-ordinal-group: 3;
    -webkit-order: 2;
    -ms-flex-order: 2;
    order: 2; }
  .medium-order-3 {
    -webkit-box-ordinal-group: 4;
    -webkit-order: 3;
    -ms-flex-order: 3;
    order: 3; }
  .medium-order-4 {
    -webkit-box-ordinal-group: 5;
    -webkit-order: 4;
    -ms-flex-order: 4;
    order: 4; }
  .medium-order-5 {
    -webkit-box-ordinal-group: 6;
    -webkit-order: 5;
    -ms-flex-order: 5;
    order: 5; }
  .medium-order-6 {
    -webkit-box-ordinal-group: 7;
    -webkit-order: 6;
    -ms-flex-order: 6;
    order: 6; } }

@media screen and (min-width: 75em) {
  .large-order-1 {
    -webkit-box-ordinal-group: 2;
    -webkit-order: 1;
    -ms-flex-order: 1;
    order: 1; }
  .large-order-2 {
    -webkit-box-ordinal-group: 3;
    -webkit-order: 2;
    -ms-flex-order: 2;
    order: 2; }
  .large-order-3 {
    -webkit-box-ordinal-group: 4;
    -webkit-order: 3;
    -ms-flex-order: 3;
    order: 3; }
  .large-order-4 {
    -webkit-box-ordinal-group: 5;
    -webkit-order: 4;
    -ms-flex-order: 4;
    order: 4; }
  .large-order-5 {
    -webkit-box-ordinal-group: 6;
    -webkit-order: 5;
    -ms-flex-order: 5;
    order: 5; }
  .large-order-6 {
    -webkit-box-ordinal-group: 7;
    -webkit-order: 6;
    -ms-flex-order: 6;
    order: 6; } }

.row.align-right {
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end; }

.row.align-center {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center; }

.row.align-justify {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between; }

.row.align-spaced {
  -webkit-justify-content: space-around;
  -ms-flex-pack: distribute;
  justify-content: space-around; }

.row.align-top {
  -webkit-box-align: start;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start; }

.column.align-top {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start; }

.row.align-bottom {
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
  -ms-flex-align: end;
  align-items: flex-end; }

.column.align-bottom {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end; }

.row.align-middle {
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center; }

.column.align-middle {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center; }

.row.align-stretch {
  -webkit-box-align: stretch;
  -webkit-align-items: stretch;
  -ms-flex-align: stretch;
  align-items: stretch; }

.column.align-stretch {
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch; }

/*-- Core --*/
/*--------------------
	COLOR VARIABLES
--------------------*/
/*-- Color definitions --*/
/* Hex code names from http://name-of-color.com/ */
/* Color partially defined by opacity */
/*-- Color by function --*/
/*--------------------
	LAYOUT VARIABLES
--------------------*/
/*-- Padding --*/
/*--------------------
	  RESPONSIVE
--------------------*/
/*-- Variables --*/
/*-- Mixins --*/
/*--------------------
	  CSS RESET
--------------------*/
html, body, div, span, h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins,
kbd, q, s, samp, small, strong, tt, var, dl, dt,
dd, ol, ul, li, fieldset, form, input, button, textarea, label, legend, table, caption,
tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  margin: 0;
  padding: 0;
  border: 0;
  border-radius: 0;
  /* for iOS */
  font-weight: inherit;
  font-style: inherit;
  font-family: inherit;
  line-height: 1;
  text-decoration: none;
  vertical-align: baseline; }

html {
  overflow-y: scroll;
  -webkit-text-size-adjust: 100%; }

ol, ul {
  list-style: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

caption, th, td {
  text-align: left;
  font-weight: normal; }

sup, sub {
  line-height: 1; }

h1, h2, h3, h4, h5, h6 {
  font-weight: normal; }

article, aside, canvas, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

*, *:before, *:after {
  box-sizing: border-box; }

/*--------------------
	   BASICS
--------------------*/
/*-- Normalize --*/
em {
  font-style: italic; }

strong {
  font-weight: bold; }

q:lang(en) {
  quotes: '&#8220;' '&#8221;' '&#8216;' '&#8217;'; }

h1, h2, h3, h4, h5, h6, p {
  margin-bottom: 15px; }

ul {
  list-style: outside disc;
  padding-left: 24px; }

ol {
  list-style: outside decimal;
  padding-left: 24px; }

a, label, input[type=button], input[type=submit], button {
  cursor: pointer; }

del {
  text-decoration: line-through; }

abbr[title], dfn[title] {
  border-bottom: 1px dotted;
  cursor: help; }

pre, code {
  background: #eee;
  border: 1px solid #ccc;
  font-family: Consolas, 'Lucida Console', 'Courier New', serif;
  padding: 2%; }

input, select, textarea {
  border: 1px solid #ccc;
  font-family: inherit;
  font-size: inherit;
  padding: 3px 6px; }

input, select {
  vertical-align: middle; }

textarea {
  overflow: auto; }

/* prevents scrollbar from showing up when unneeded in IE */
small, sup, sub {
  font-size: 85%; }

sup {
  vertical-align: super; }

sub {
  vertical-align: sub; }

table {
  margin: 10px 0;
  padding: 3px; }

thead {
  border-bottom: 2px solid #ccc; }

th {
  font-weight: bold; }

th, tr, td {
  padding: 4px 12px; }

tr {
  border-bottom: 1px solid #ccc; }

/*-- Clearfix --*/
.clearfix:before,
.clearfix:after {
  content: " ";
  display: table; }

.clearfix:after {
  clear: both; }

.ie7 .clearfix {
  zoom: 1; }

/*-- ng-cloak: prevent FOUC before Angular JavaScript loads --*/
[ng\:cloak],
[ng-cloak],
[data-ng-cloak],
[x-ng-cloak],
.ng-cloak,
.x-ng-cloak {
  display: none !important; }

/*-- Image Replacement --*/
.ir {
  overflow: hidden;
  text-indent: 200%;
  white-space: nowrap; }

/*-- Inline link touch targets --*/
.touch p a {
  margin: 0 -.5em;
  padding: 0 .5em; }

/*-- Forms --*/
input[type="text"],
input[type="number"],
input[type="password"],
textarea {
  font-size: 16px;
  /* for iOS phones */ }

input.ng-dirty.ng-invalid {
  border-color: rgba(169, 68, 66, 0.6);
  box-shadow: 0 0 6px rgba(169, 68, 66, 0.6); }

button {
  border-radius: 4px;
  display: inline-block;
  font-size: inherit;
  padding: 5px 4px;
  vertical-align: middle; }

/*--------------------
	   FONTS
--------------------*/
/* Full @font-face declaration */
/*--------------------
	 PRESENTATION
--------------------*/
body {
  background: #eee;
  color: #333;
  font: normal 16px/1.2 'Helvetica Neue', Helvetica, Arial, Verdana, sans-serif; }

.layout-canvas {
  background: #fff; }

/*------------------------------------------------------------------------- Content --*/
.content-wrapper {
  padding: 3%; }
  @media screen and (min-width: 768px) {
    .content-wrapper {
      padding: 1.5% 3%; } }

.content-heading {
  font-size: 36px;
  margin: -1.5% 0 20px; }
  @media screen and (min-width: 768px) {
    .content-heading {
      margin-top: 0;
      text-align: center; } }

/*--------------------
 LAYOUT FUNCTIONALITY
--------------------*/
body {
  min-width: 320px; }

.layout-overflow {
  overflow: hidden;
  /* necessary to handle offcanvas scrollbar behavior */ }

/*------------------------------------------------------------------------- Off-canvas Functionality --*/
/*-- Content canvas wrapper --*/
.layout-canvas {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  position: relative;
  left: 0;
  width: 100%; }
  @media screen and (min-width: 768px) {
    .layout-canvas {
      -webkit-transition: none;
      transition: none;
      -webkit-transform: none;
      transform: none; } }
  .csstransforms3d .layout-canvas {
    -webkit-transition: -webkit-transform 250ms ease;
    transition: transform 250ms ease;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  .csstransforms3d .nav-open .layout-canvas {
    -webkit-transform: translate3d(270px, 0, 0);
    transform: translate3d(270px, 0, 0); }
  .no-csstransforms3d .nav-open .layout-canvas {
    left: 270px; }

/*-- Header --*/
@media screen and (min-width: 768px) {
  .header-mobile-page {
    display: none; } }

/*-- Navigation --*/
.header .nav {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  display: none;
  /* deal with FOUC */
  height: 100%;
  overflow-y: auto;
  position: absolute;
  top: 0;
  width: 270px; }
  @media screen and (min-width: 768px) {
    .header .nav {
      display: block;
      position: relative;
      width: 100%; } }
  .nav-closed .header .nav,
  .nav-open .header .nav {
    display: block;
    /* deal with FOUC */ }
  .csstransforms3d .header .nav {
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0); }
    @media screen and (min-width: 768px) {
      .csstransforms3d .header .nav {
        -webkit-transform: none;
        transform: none; } }
  .no-csstransforms3d .nav-closed .header .nav {
    left: -100%; }
  .no-csstransforms3d .nav-open .header .nav {
    left: -270px; }
    @media screen and (min-width: 768px) {
      .no-csstransforms3d .nav-open .header .nav {
        left: 0; } }

/*--------------------
	   PRINT
--------------------*/
@media print {
  * {
    background: #fff; }
  body {
    color: #000;
    font: normal 16px/1.4 Georgia, 'Times New Roman', serif; }
  /*-- Hidden Elements --*/
  .header,
  .footer {
    display: none; }
  /*-- Show link URLs --*/
  a:link,
  a:visited {
    color: blue;
    text-decoration: underline; }
  a:link:after,
  a:visited:after {
    content: " [" attr(href) "] ";
    font-size: 75%; } }

/*-- Modules --*/
/*--------------------
	    HEADER
--------------------*/
.header-mobile-page {
  background: #555;
  color: #fff;
  height: 50px;
  margin-bottom: 10px;
  position: relative; }
  .header-mobile-page-siteTitle {
    font-size: 30px;
    line-height: 50px;
    margin: 0;
    padding: 0 0 0 50px;
    position: absolute;
    top: 0;
    text-align: center;
    width: 100%; }

/*--------------------
	 NAVIGATION
--------------------*/
/*------------------------------------------------------------------------- Hamburger menu toggle --*/
.toggle-offcanvas {
  background: #555;
  border-right: 1px solid rgba(255, 255, 255, 0.5);
  display: inline-block;
  height: 50px;
  padding: 23.5px 13px;
  position: relative;
  text-align: center;
  width: 50px;
  z-index: 100; }
  .toggle-offcanvas span,
  .toggle-offcanvas span:before,
  .toggle-offcanvas span:after {
    background: #fff;
    border-radius: 1px;
    content: '';
    display: block;
    height: 3px;
    position: absolute;
    -webkit-transition: all 250ms ease-in-out;
    transition: all 250ms ease-in-out;
    width: 24px; }
  .toggle-offcanvas span:before {
    top: -9px; }
  .toggle-offcanvas span:after {
    bottom: -9px; }
  .nav-open .toggle-offcanvas span {
    background: transparent; }
    .nav-open .toggle-offcanvas span:before, .nav-open .toggle-offcanvas span:after {
      top: 0; }
    .nav-open .toggle-offcanvas span:before {
      -webkit-transform: rotate(45deg);
      transform: rotate(45deg); }
    .nav-open .toggle-offcanvas span:after {
      -webkit-transform: rotate(-45deg);
      transform: rotate(-45deg); }

/*------------------------------------------------------------------------- Navigation --*/
.header .nav {
  box-shadow: inset -8px 0 8px -6px rgba(0, 0, 0, 0.2);
  padding: 3%; }
  @media screen and (min-width: 768px) {
    .header .nav {
      background: #555;
      box-shadow: none;
      padding: 1.5% 3%; } }
  .header .nav .active .nav-list-item-text {
    font-weight: bold; }
    @media screen and (min-width: 768px) {
      .header .nav .active .nav-list-item-text {
        border-bottom: 1px solid rgba(255, 255, 255, 0.5); } }
  .header .nav-list {
    list-style: none;
    margin-bottom: 0;
    padding-left: 0; }
    .header .nav-list a {
      display: block;
      padding: 6px; }
      .header .nav-list a:hover, .header .nav-list a:active, .header .nav-list a:focus {
        text-decoration: none; }
    @media screen and (min-width: 768px) {
      .header .nav-list {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        -webkit-box-pack: center;
        -webkit-justify-content: center;
        -ms-flex-pack: center;
        justify-content: center;
        padding: 0;
        width: 100%; }
        .header .nav-list a,
        .header .nav-list a:hover,
        .header .nav-list a:active,
        .header .nav-list a:focus {
          color: #fff; }
        .header .nav-list li {
          padding: 0 20px; } }

/*--------------------
	    FOOTER
--------------------*/
.footer {
  padding: 3%;
  text-align: center; }
  @media screen and (min-width: 768px) {
    .footer {
      padding: 1.5% 3%; } }

/*--------------------
	    LOADING
--------------------*/
.loading-wrapper {
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 999; }

.loading-overlay {
  background: rgba(255, 255, 255, 0.9);
  position: absolute;
  top: 0;
  bottom: 0;
  width: 100%; }

.loading-spinner {
  margin: -16px 0 0 -16px;
  position: absolute;
  top: 50%;
  left: 50%; }

/*-- Pages --*/
/*--------------------
	    404
--------------------*/

/*# sourceMappingURL=data:application/json;base64, */
